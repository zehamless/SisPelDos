<?php

namespace App\Filament\Resources;

use App\Filament\Resources\DiskusiResource\Pages;
use App\Filament\Resources\DiskusiResource\RelationManagers;
use App\Models\Diskusi;
use App\Models\MateriTugas;
use Filament\Forms;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Form;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Pages\SubNavigationPosition;
use Filament\Resources\Pages\Page;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Guava\FilamentNestedResources\Ancestor;
use Guava\FilamentNestedResources\Concerns\NestedResource;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use Parallax\FilamentComments\Infolists\Components\CommentsEntry;

class DiskusiResource extends Resource
{
    use NestedResource;
    protected static ?string $model = MateriTugas::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';
    protected static ?string $recordTitleAttribute = 'judul';
    protected static ?string $pluralLabel = 'Diskusi';
    protected static SubNavigationPosition $subNavigationPosition = SubNavigationPosition::Top;
    public static function getAncestor(): ?Ancestor
    {
        return Ancestor::make('diskusi', 'modul');
    }
    public static function getEloquentQuery(): Builder
    {
        return parent::getEloquentQuery()->where('jenis', 'diskusi');
    }
    public static function canCreate(): bool
    {
        return parent::canCreate(); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\TextInput::make('judul')
                    ->required()
                    ->columnSpan(2)
                    ->maxLength(255),
                Toggle::make('published')
                    ->label('Published')
                    ->onIcon('heroicon-c-check')
                    ->offIcon('heroicon-c-x-mark')
                    ->onColor('success')
                    ->default(false),
                Toggle::make('terjadwal')
                    ->label('Terjadwal')
                    ->onIcon('heroicon-c-check')
                    ->offIcon('heroicon-c-x-mark')
                    ->onColor('success')
                    ->helperText('Apabila terjadwal, maka tugas akan diterbitkan pada tanggal mulai')
                    ->default(false),
                Forms\Components\Group::make([
                    Forms\Components\DateTimePicker::make('tgl_mulai')
                        ->native(false)
                        ->timezone('Asia/Jakarta')
                        ->required(),
                    Forms\Components\DateTimePicker::make('tgl_selesai')
                        ->native(false)
                        ->timezone('Asia/Jakarta')
                        ->after('tgl_tenggat')
                        ->rule('after:tgl_mulai')
                        ->required(),
                ])->columns(2)->columnSpanFull(),
                Forms\Components\RichEditor::make('deskripsi')
                    ->columnSpan(2)
                    ->label('Deskripsi'),
            ]);
    }

    public static function infolist(Infolist $infolist): Infolist
    {
       return $infolist
           ->schema([
               Section::make('Status')
                   ->schema([
                       TextEntry::make('published')
                           ->label('Status')
                           ->badge()
                           ->formatStateUsing(fn($state) => $state ? 'Published' : 'Draft')
                           ->color(fn($state) => $state ? 'success' : 'danger'),
                       TextEntry::make('terjadwal')
                           ->label('Terjadwal')
                           ->badge()
                           ->formatStateUsing(fn($state) => $state ? 'Yes' : 'No')
                           ->color(fn($state) => $state ? 'success' : 'danger'),
                       TextEntry::make('created_at')
                           ->label('Dibuat pada')
                           ->badge()
                           ->dateTime()
                           ->timezone('Asia/Jakarta'),
                       TextEntry::make('updated_at')
                           ->label('Terakhir diubah pada')
                           ->badge()
                           ->dateTime()
                           ->timezone('Asia/Jakarta'),
                   ])->columns(2),
               Section::make('Tanggal')
                   ->schema([
                       TextEntry::make('tgl_mulai')
                           ->label('Tanggal Mulai')
                           ->badge()
                           ->color('success')
                           ->dateTime()
                           ->timezone('Asia/Jakarta'),
                       TextEntry::make('tgl_selesai')
                           ->label('Tanggal Selesai')
                           ->badge()
                           ->color('danger')
                           ->dateTime()
                           ->timezone('Asia/Jakarta'),
                   ])->columns(3),
               Section::make('Deskripsi')
                   ->schema([
                       TextEntry::make('deskripsi')
                           ->hiddenLabel()
                           ->markdown()

                   ])->collapsible()->collapsed(),
               Section::make('Diskusi')
               ->schema([
                   CommentsEntry::make('filament_comments'),
               ]),
           ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }
    public static function getRecordSubNavigation(Page $page): array
    {
        return $page->generateNavigationItems([
            Pages\ViewDiskusi::class,
            Pages\EditDiskusi::class,
            Pages\PenilaianDiskusi::class
        ]);
    }
    public static function getPages(): array
    {
        return [
//            'index' => Pages\ListDiskusis::route('/'),
//            'create' => Pages\CreateDiskusi::route('/create'),
            'edit' => Pages\EditDiskusi::route('/{record}/edit'),
            'view' => Pages\ViewDiskusi::route('/{record}'),
            'penilaian' => Pages\PenilaianDiskusi::route('/{record}/penilaian'),
        ];
    }
}
